Employ
======

### Important Notes

*To* enhance and ensure learning step for actual understanding of GUI application by knowing exactly how the layout of frame, panel, component, and listener works; I personally avoid using GUI builder. Furthermore generated GUI code from the builder is too dirty and often cannot be modified later without its only builder, so coding the GUI by hand is actually a lot better. Because of that, this application is not using any GUI builder at the time then the code became more effective to develop, read, and learn back later. *So* it takes more time to learn the fundamentals before take a further step to SQL database. Others may have finished by using NetBeans IDE's GUI builder and available SQL connection via local setup server, but the code and design may not work outside it and even break in other IDE or even other user & developer with different configuration. Another thing is employee database tables need to be separated by each type. *I* may send an update if this app has implement SQL database with cross compability, including save and load local database file feature to ensure platform independent. (Read more on [Learning Step](#Learning-Step) section.)

To directly execute the application, use `EmployApp.jar` java archive.

### Identification

```
Title:  Employ
Desc:   Simple basic employee database system

Class:  SMTI06
NPM:    54411850
Name:   M Haidar Hanif

ID:     Task Four
Create: Object-oriented application with SQL-based database
Book:   Java™ How to Program, Seventh Edition
Page:   522 [549]
Task:   10.11-10.12 => Improvement
Date:   April 2013
```

### Objectives

- GUI application
- Employee earnings system
- Employee database
- SQL-based application

### Project Structure

```
employ
├── src
├── out
├── .idea
├── .git
├── employ.iml
├── EmployApp.jar
├── README.mkd
├── LICENSE
└── .gitignore
```

*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *

Learning Step
-------------

1. Object-Oriented Programming
2. Java Programming Language
3. Inheritance
4. Polymorphism
5. Class Variety
6. GUI Application
   - Event-Driven Programming
   - GUI Parts
     - Graphical Components
     - Listener Methods
     - Application Methods
   - GUI with Swing and AWT
   - Swing Class Hierarchy
   - Containers
   - Components
   - Layout Manager
7. SQL Database with JDBC
   - MySQL JDBC Driver
   - SQLite ODBC Driver

*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *

Employee Database System
------------------------

### Element

```
SSN = Social Security Number = 8 digits
First Name    = 15 chars
Last Name     = 15 chars
Full Name     = 31 chars (with space)
Employee Type = 16 chars
```

Employee Type:

- Salaried
- Hourly
- Commission
- CommissionPlus
- PieceWorker

### Table

| No | SSN        | Full Name    | Employee Type   |
|:--:|:----------:|:------------ |:--------------- |
| 1  | 111-11-111 | First Last   | Salaried        |
| 2  | 222-22-222 | One Second   | Hourly          |
| 3  | 333-33-333 | Begin End    | Commission      |
| 4  | 444-44-444 | Start Finish | CommissionPlus  |
| 4  | 555-55-555 | Land Sky     | Piece Worker    |

### Menu

```
Manage
├── Add
│   ├── SSN
│   ├── First Name
│   ├── Last Name
│   └── Employee Type
├── Edit
│   ├── SSN
│   ├── First Name
│   ├── Last Name
│   └── Employee Type
└── Delete
    └── SSN
Display
├── All
└── Sorted
    ├── SSN
    ├── Name
    └── Employee Type
```

*  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *  *

Resource
--------

Source code released under [MIT License](LICENSE) and available in [GitHub repository](https://github.com/mhaidarh/employ).

Graphics released under [Creative Commons Attribution-NonCommercial-ShareAlike 3.0 Unported](http://creativecommons.org/licenses/by-nc-sa/3.0).

